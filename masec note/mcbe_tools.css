/* Last Edit 2022/07/17 */ 

#main-full { width: 100%; margin: 0em 2em; overflow: auto; }

textarea {
  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  font-size: large;
}

input[type="text"], input[type="number"], select {
  padding: 0.25em;
}
input[type="button"], button {
  padding: 0.5em 3em;
  margin: 0.5em 0em;
}
input[type="checkbox"] {
  width: 1.25em;
  height: 1.25em;
  vertical-align: middle;
}
input[type="radio"] {
  width: 1.25em;
  height: 1.25em;
  vertical-align: middle;
}

.flexbox {
  text-align: center;
  display: flex;
  justify-content: flex-start;
  overflow: auto;
}

div.content { margin-top: 0; }
#hasAimCollision:checked ~ div.hasAimCollision div.content { position: relative; transform: translate(0em, 0em); }
#hasAimCollision:not(:checked) ~ div.hasAimCollision div.content { position: absolute; transform: translate(-50em, 0em); }
#hasBlockCollision:checked ~ div.hasBlockCollision div.content { position: relative; transform: translate(0em, 0em); }
#hasBlockCollision:not(:checked) ~ div.hasBlockCollision div.content { position: absolute; transform: translate(-50em, 0em); }
#flamable:checked ~ div.flamable div.content { position: relative; transform: translate(0em, 0em); }
#flamable:not(:checked) ~ div.flamable div.content { position: absolute; transform: translate(-50em, 0em); }
#hasMapColor:not(:checked) ~ div.mapColor { transform: translate(-50em, 0em); display: inline-block; position: absolute; }
#hasMapColor:checked ~ div.mapColor { transform: translate(0.5em, 0em); display: inline-block; position: absolute; }
#isSpecialFriction:not(:checked) ~ div.frictionVal { transform: translate(-50em, 0em); display: inline-block; position: absolute; }
#isSpecialFriction:checked ~ div.frictionVal { transform: translate(0.5em, 0em); display: inline-block; position: absolute; }

#armor:checked ~ div.armor div.content { position: relative; transform: translate(0em, 0em); }
#armor:not(:checked) ~ div.armor div.content { position: absolute; transform: translate(-50em, 0em); }
#cooldown:checked ~ div.cooldown div.content { position: relative; transform: translate(0em, 0em); }
#cooldown:not(:checked) ~ div.cooldown div.content { position: absolute; transform: translate(-50em, 0em); }
#enchantable:checked ~ div.enchantable div.content { position: relative; transform: translate(0em, 0em); }
#enchantable:not(:checked) ~ div.enchantable div.content { position: absolute; transform: translate(-50em, 0em); }
#repairable:checked ~ div.repairable div.content { position: relative; transform: translate(0em, 0em); }
#repairable:not(:checked) ~ div.repairable div.content { position: absolute; transform: translate(-50em, 0em); }
#wearable:checked ~ div.wearable div.content { position: relative; transform: translate(0em, 0em); }
#wearable:not(:checked) ~ div.wearable div.content { position: absolute; transform: translate(-50em, 0em); }

#loot_table div {
  display: inline-block;
  padding: 0.5em;
  margin: 0.25em;
}
div[id^="pool_"] { background-color: #fcc; width: 90%; }
div[id^="entries_"] { background-color: #8cc; width: 80%; }